dist:     trusty
sudo:     required

language: c

os:
    - linux
    - osx

compiler:
    - gcc
    - clang

env:
    - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Debug

matrix:
    exclude:
        - os:       osx
          compiler: gcc

        - os:  osx
          env: TARGET_CPU=x86 BUILD_CONFIGURATION=Debug

install:
    - if [ $TRAVIS_OS_NAME = linux ]; then source travis/install-linux.sh; fi

script:
    - cd TP_IZ_2_single_thread
    - mkdir cmake-build-debug
    - cd cmake-build-debug
    - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU
    - cmake --build .
    #- if [ $TRAVIS_OS_NAME = linux ]; then cppcheck --error-exitcode=1 --inconclusive --enable=all --language=c ../src ../inc; fi
    - if [ $TRAVIS_OS_NAME = linux ]; then cppcheck --error-exitcode=1 --inconclusive --enable=all --language=c main.cpp tests.cpp; fi


    - cd ../../TP_IZ2_tests
    - mkdir cmake-build-debug
    - cd cmake-build-debug
    - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU
    - cmake --build .
    #- if [ $TRAVIS_OS_NAME = linux ]; then cppcheck --error-exitcode=1 --inconclusive --enable=all --language=c ../src ../inc; fi
    - if [ $TRAVIS_OS_NAME = linux ]; then cppcheck --error-exitcode=1 --inconclusive --enable=all --language=c main.cpp tests.cpp; fi

    - if [ $TRAVIS_OS_NAME = linux ]; then valgrind --error-exitcode=1 --leak-check=full --show-leak-kinds=all ./TP_IZ2_tests; fi
    - if [ $TRAVIS_OS_NAME = osx ]; then ./TP_IZ2_tests; fi
  